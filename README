# 队列拥塞控制仿真 (基于tc)

目前基于 tc 的队列查询（带宽策略修改）的延时约为 40-50us。

## unix socket 监听服务

- TODO: 将测速代码转移至客户端, 测试速度 
- tc.c 定义 //全局变量FD int CLIENT_SOCK_FD=0; , 用于其他程序tc_util.c write(CLIENT_SOCK_FD) 回客户端; int ECHO_TO_SERVER = 0; //控制命令class show dev s1-eth3输出位置 输出在 1 - 服务端  0 -客户端
- tc.c 建立 socket 监听通道， 从 socket 通道解析传入命令 并进行参数处理后输出
- 将原有的测速代码 tc.c 复制保存为 tc_bench.c
- tc_util.c 打开部分输出
- tc.c 新的参数初始化变量



## 代码分析
输入 class show dev s2-eth后的调用关系
- tc.c main() ->
- tc_class.c tc_class_list() -> rtnl_dump_filter() ->
   * lib/libnetlink.c  int rtnl_dump_filter() {} -> rtnl_dump_filter_l() 收到 消息类型 h->nlmsg_type == NLMSG_DONE 时, 结束处理.
- tc_class.c rtnl_dump_filter() 在参数中回调了 print_class() ->
- tc_class.c  print_class()


## tc 源代码准备与控制延时测速
1. 初始编译, 移除不需要的  arpd, 避免出现 db185.h 找不到的情况
```
vi misc/Makefile
# 删掉其中的 arpd
TARGETS=ss nstat ifstat rtacct lnstat
```
2. 备份原有 tc.c 文件为 tc.orig.c
3. 修改tc.c支持多轮循环测速, 增加show命令初始化函数 `my_show_queue_argv` 和change命令初始化函数 `my_change_queue_argv`
4. 注释 tc_class.c tc_util.c 中的打印函数， 避免打印输出影响测速.
5. 测速命令`make && time sudo ./tc/tc show`与结果

- 相关测试参数与测速函数：
- count: 测速的循环数
- polling_interval: 采样间隔(us), usleep()时间
- my_show_queue_argv()： 测速函数-查看队列状态
- my_change_queue_argv()：测速函数-修改带宽状态

测试函数 |循环数(count)|采样间隔(us)|平均延时(us)|总运行时间(s, time)|cpu利用率(vmstat 1)| 备注
------------------|-----  |-------|--------|--------|----
my_show_queue_argv  |1000000| 0   | 3.5  | 7.0   | 99%|
my_show_queue_argv  |100000 | 1   | 37  | 7.4   | 1% |
my_show_queue_argv  |100000 | 10  | 47  | 9.4   | 1% | 相对上一项延时增加的就是采样间隔的10ms
my_change_queue_argv|100000 | 1   | 42  | 7.7   | 1% | 相对show增加5us
my_change_queue_argv|100000 | 10  | 50  | 9.7   | 1% | 相对show增加3us


# Orignal README.md


This is a set of utilities for Linux networking.

Information:
    http://www.linuxfoundation.org/collaborate/workgroups/networking/iproute2

Download:
    http://devresources.linuxfoundation.org/dev/iproute2/download

Repository:
    git://git.kernel.org/pub/scm/linux/kernel/git/shemminger/iproute2.git

How to compile this.
--------------------
1. libdbm

arpd needs to have the db4 development libraries. For debian
users this is the package with a name like libdb4.x-dev.
DBM_INCLUDE points to the directory with db_185.h which
is the include file used by arpd to get to the old format Berkely
database routines.  Often this is in the db-devel package.

2. make

The makefile will automatically build a Config file which
contains whether or not ATM is available, etc.

3. To make documentation, cd to doc/ directory , then
   look at start of Makefile and set correct values for
   PAGESIZE=a4		, ie: a4 , letter ...	(string)
   PAGESPERPAGE=2	, ie: 1 , 2 ...		(numeric)
   and make there. It assumes, that latex, dvips and psnup
   are in your path.

4. This package includes matching sanitized kernel headers because
   the build environment may not have up to date versions. See Makefile
   if you have special requirements and need to point at different
   kernel include files.

Stephen Hemminger
shemminger@linux-foundation.org

Alexey Kuznetsov
kuznet@ms2.inr.ac.ru
